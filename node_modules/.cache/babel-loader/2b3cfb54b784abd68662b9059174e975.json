{"ast":null,"code":"import { SearchBar } from \"../Components/SearchBar/SearchBar\";\nconst redirectURI = \"http://localhost:3000/\";\nconst clentID = \"756819499fd4455b8ebb596835f33a82\";\nlet accessToken;\nlet expirationTime;\nSpotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    } else {\n      if (window.location.href.match(/access_token=([^&]*)/) && window.location.href.match(/expires_in=([^&]*)/)) {\n        accessToken = window.location.href.match(/access_token=([^&]*)/);\n        expirationTime = window.location.href.match(/expires_in=([^&]*)/);\n        window.setTimeout(() => accessToken = '', expirationTime * 1000);\n        window.history.pushState('Access Token', null, '/');\n        window.location = `https://accounts.spotify.com/authorize?\n                        client_id=${clentID}\n                        &response_type=token\n                        &scope=playlist-modify-public\n                        &redirect_uri=${redirectURI}`;\n      }\n    }\n  },\n\n  search(term) {\n    return fetch(`GET https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(JSONResponse => {\n      JSONResponse.map(track => {\n        track.id, track.name, track.artists[0].name, track.album.name, track.uri;\n      });\n    });\n  }\n\n};\nexport default Spotify;","map":{"version":3,"sources":["/Users/folajimi1/Google Drive/Codecademy/Projects/Jamming/jamming/src/util/Spotify.js"],"names":["SearchBar","redirectURI","clentID","accessToken","expirationTime","Spotify","getAccessToken","window","location","href","match","setTimeout","history","pushState","search","term","fetch","headers","Authorization","then","response","json","JSONResponse","map","track","id","name","artists","album","uri"],"mappings":"AAAA,SAASA,SAAT,QAA0B,mCAA1B;AAEA,MAAMC,WAAW,GAAG,wBAApB;AACA,MAAMC,OAAO,GAAG,kCAAhB;AAEA,IAAIC,WAAJ;AACA,IAAIC,cAAJ;AAEAC,OAAO,GAAG;AACNC,EAAAA,cAAc,GAAG;AACb,QAAIH,WAAJ,EAAiB;AACb,aAAOA,WAAP;AACH,KAFD,MAEO;AACH,UAAII,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,KACAH,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CADJ,EACsD;AAC9CP,QAAAA,WAAW,GAAGI,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,sBAA3B,CAAd;AACAN,QAAAA,cAAc,GAAGG,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,oBAA3B,CAAjB;AACAH,QAAAA,MAAM,CAACI,UAAP,CAAkB,MAAMR,WAAW,GAAG,EAAtC,EAA0CC,cAAc,GAAG,IAA3D;AACAG,QAAAA,MAAM,CAACK,OAAP,CAAeC,SAAf,CAAyB,cAAzB,EAAyC,IAAzC,EAA+C,GAA/C;AACAN,QAAAA,MAAM,CAACC,QAAP,GAAmB;oCACHN,OAAQ;;;wCAGJD,WAAY,EAJhC;AAKP;AACJ;AACJ,GAlBK;;AAoBNa,EAAAA,MAAM,CAACC,IAAD,EAAO;AACT,WAAOC,KAAK,CAAE,sDAAqDD,IAAK,EAA5D,EACR;AAAEE,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAG,UAASf,WAAY;AAAtC;AAAX,KADQ,CAAL,CAELgB,IAFK,CAEEC,QAAD,IAAc;AAAE,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAwB,KAFzC,EAGLF,IAHK,CAGCG,YAAY,IAAI;AAAEA,MAAAA,YAAY,CAACC,GAAb,CAAkBC,KAAK,IAAI;AAAEA,QAAAA,KAAK,CAACC,EAAN,EAAUD,KAAK,CAACE,IAAhB,EAAsBF,KAAK,CAACG,OAAN,CAAc,CAAd,EAAiBD,IAAvC,EAA6CF,KAAK,CAACI,KAAN,CAAYF,IAAzD,EAA+DF,KAAK,CAACK,GAArE;AAA0E,OAAvG;AAA2G,KAH9H,CAAP;AAIH;;AAzBK,CAAV;AA6BA,eAAexB,OAAf","sourcesContent":["import { SearchBar } from \"../Components/SearchBar/SearchBar\";\n\nconst redirectURI = \"http://localhost:3000/\";\nconst clentID = \"756819499fd4455b8ebb596835f33a82\";\n\nlet accessToken;\nlet expirationTime;\n\nSpotify = {\n    getAccessToken() {\n        if (accessToken) {\n            return accessToken;\n        } else {\n            if (window.location.href.match(/access_token=([^&]*)/) &&\n                window.location.href.match(/expires_in=([^&]*)/)) {\n                    accessToken = window.location.href.match(/access_token=([^&]*)/); \n                    expirationTime = window.location.href.match(/expires_in=([^&]*)/);\n                    window.setTimeout(() => accessToken = '', expirationTime * 1000);\n                    window.history.pushState('Access Token', null, '/');\n                    window.location = `https://accounts.spotify.com/authorize?\n                        client_id=${clentID}\n                        &response_type=token\n                        &scope=playlist-modify-public\n                        &redirect_uri=${redirectURI}`;\n            }\n        }\n    },\n\n    search(term) {\n        return fetch(`GET https://api.spotify.com/v1/search?type=track&q=${term}`,\n            { headers: {Authorization: `Bearer ${accessToken}`} }\n        ).then( (response) => { return response.json() } \n        ).then( JSONResponse => { JSONResponse.map( track => { track.id, track.name, track.artists[0].name, track.album.name, track.uri } ) } )\n    }\n}\n\n\nexport default Spotify;"]},"metadata":{},"sourceType":"module"}