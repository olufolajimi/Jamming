{"ast":null,"code":"var _jsxFileName = \"/Users/folajimi1/Google Drive/Codecademy/Projects/Jamming/jamming/src/Components/App/App.js\";\nimport React from 'react';\nimport './App.css';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { Spotify } from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: \"PlayceHolder\",\n      playlistTracks: [{\n        name: \"Jesus Walks\",\n        artist: \"Kanye West\",\n        album: \"College Dropout\",\n        id: \"jesus-walks\"\n      }, {\n        name: \"Bambi\",\n        artist: \"Jidenna\",\n        album: \"The Chief\",\n        id: \"bambi\"\n      }]\n    };\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  componentDidMount() {\n    Spotify.getAccessToken();\n    console.log(Spotify.accessToken); // debugger;\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    this.state.playlistTracks.push(track);\n    this.setState({\n      playlistTracks: this.state.playlistTracks\n    });\n  }\n\n  removeTrack(track) {\n    this.state.playlistTracks.filter(savedTrack => savedTrack.id !== track.id);\n    this.setState({\n      playlistTracks: this.state.playlistTracks\n    });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({\n      playlistName: name\n    });\n  }\n\n  savePlaylist() {\n    const trackURIs = this.state.playlistTracks.map(track => {\n      return track.uri;\n    });\n    Spotify.savePlaylist(this.state.playlistName, trackURIs);\n    this.setState({\n      playlistName: \"New Playlist\",\n      playlistTracks: []\n    });\n    return;\n  }\n\n  async search(term) {\n    const results = await Spotify.search(term);\n    this.setState({\n      searchResults: results\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, \"Ja\", /*#__PURE__*/React.createElement(\"span\", {\n      className: \"highlight\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }, \"mmm\"), \"ing\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      onSearch: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-playlist\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(SearchResults, {\n      searchResults: this.state.searchResults,\n      onAdd: this.addTrack,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Playlist, {\n      playlistName: this.state.playlistName,\n      playlistTracks: this.state.playlistTracks,\n      onRemove: this.removeTrack,\n      onNameChange: this.updatePlaylistName,\n      onSave: this.savePlaylist,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/folajimi1/Google Drive/Codecademy/Projects/Jamming/jamming/src/Components/App/App.js"],"names":["React","SearchResults","Playlist","SearchBar","Spotify","App","Component","constructor","props","state","searchResults","playlistName","playlistTracks","name","artist","album","id","addTrack","bind","removeTrack","updatePlaylistName","savePlaylist","search","componentDidMount","getAccessToken","console","log","accessToken","track","find","savedTrack","push","setState","filter","trackURIs","map","uri","term","results","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport { SearchResults } from '../SearchResults/SearchResults';\nimport { Playlist } from '../Playlist/Playlist';\nimport { SearchBar } from '../SearchBar/SearchBar';\nimport { Spotify } from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      searchResults: [],\n      playlistName: \"PlayceHolder\",\n      playlistTracks: [ \n        { name: \"Jesus Walks\", artist: \"Kanye West\", album: \"College Dropout\", id: \"jesus-walks\"}, \n        { name: \"Bambi\", artist: \"Jidenna\", album: \"The Chief\", id: \"bambi\" } \n      ]\n    }\n    this.addTrack = this.addTrack.bind(this)\n    this.removeTrack = this.removeTrack.bind(this)\n    this.updatePlaylistName = this.updatePlaylistName.bind(this)\n    this.savePlaylist = this.savePlaylist.bind(this)\n    this.search = this.search.bind(this)\n  }\n\n  componentDidMount() {\n    Spotify.getAccessToken();\n    console.log(Spotify.accessToken)\n    // debugger;\n  }\n\n  addTrack(track) {\n    if (this.state.playlistTracks.find( savedTrack => savedTrack.id === track.id )) {\n      return\n    }\n    this.state.playlistTracks.push(track)\n    this.setState({ playlistTracks: this.state.playlistTracks })\n  }\n\n  removeTrack(track) {\n    this.state.playlistTracks.filter( savedTrack => savedTrack.id !== track.id )\n    this.setState({ playlistTracks: this.state.playlistTracks })\n  }\n\n  updatePlaylistName(name) {\n    this.setState({ playlistName: name })\n  }\n\n  savePlaylist() {\n    const trackURIs = this.state.playlistTracks.map((track) => { return track.uri } )\n    Spotify.savePlaylist(this.state.playlistName, trackURIs)\n    this.setState({playlistName: \"New Playlist\", playlistTracks: []})\n    return\n  }\n\n  async search(term) {\n    const results = await Spotify.search(term)\n    this.setState({ searchResults: results }) \n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search} />\n          <div className=\"App-playlist\">\n            <SearchResults searchResults={this.state.searchResults} onAdd={this.addTrack} />\n            <Playlist playlistName={this.state.playlistName} \n              playlistTracks={this.state.playlistTracks} \n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}